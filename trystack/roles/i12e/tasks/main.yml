---
# 1. Provision Security Rules
- name: Create Security Group
  os_security_group:
    cloud: "{{ item.cloud }}"
    name:  "{{ item.group }}"
  with_security-group:
    - "{{openstack}}"
  tags: security1

- name: Add Security Rule
  os_security_group_rule:
    cloud: "{{ item.0.name }}"
    security_group: "{{ item.1.name }}"
    protocol:       "{{ item.2.rules.protocol }}"
    port_range_min: "{{ item.2.rules.port_min }}"
    port_range_max: "{{ item.2.rules.port_max }}"
    remote_ip_prefix: 0.0.0.0/0
  with_subelements:
    - "{{ cloud }}"
    - security.rules
  tags: security

# 2. Provision Pub KeyPair
- name: Add Keypairs 'wangkexiong'
  os_keypair:
    cloud: trystack1
    name:  wangkexiong
    public_key_file: '{{pub_key_file}}'
  tags: security

# 3. Network Configuration
- name: Create Network 'internal'
  os_network:
    cloud: trystack1
    name:  internal
    external: no
  tags: network

- name: Create Network 'hide'
  os_network:
    cloud: trystack1
    name:  hide
    external: no
  tags: network

- name: Create subnet for Network 'internal'
  os_subnet:
    cloud: trystack1
    name:  sub1
    network_name: internal
    cidr:  172.20.66.0/24
    dns_nameservers:
        - 4.4.4.4
        - 8.8.8.8
  tags: network

- name: Create subnet for Network 'hide'
  os_subnet:
    cloud: trystack1
    name:  sub2
    network_name: hide
    cidr:  172.20.88.0/24
    dns_nameservers:
        - 4.4.4.4
        - 8.8.8.8
  tags: network

- name: Create router for 'internal' and 'hide' connected
  os_router:
    cloud: trystack1
    name:  router1
    network: public
    interfaces:
        - sub1
        - sub2
  tags: network

# 4. Create Instances
- name: Create k8s-master
  os_server:
    name:      master1-k8s
    cloud:     trystack1
    key_name: wangkexiong
    security_groups: opsecurity
    nics:
      - net-name: internal
    image:     Ubuntu16.04
    flavor:    m1.small
    auto_ip:   yes
    meta:
      ansible_host_groups: k8s_master
      ansible_host_user:   ubuntu
  tags: instance

- name: Create k8s-workers
  os_server:
    name:      worker{{item}}-k8s
    cloud:     trystack1
    key_name: wangkexiong
    security_groups: opsecurity
    nics:
      - net-name: internal
    image:     Ubuntu16.04
    flavor:    m1.small
    auto_ip:    no
    meta:
      ansible_host_groups: k8s_worker
      ansible_host_user:   ubuntu
  with_sequence: count=2
  tags: instance
...
